// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"github.com/gofiber/fiber/v2"
	"service/internal/interfaces"
)

type httpMyService struct {
	errorHandler     ErrorHandler
	maxBatchSize     int
	maxParallelBatch int
	svc              *serverMyService
	base             interfaces.MyService
}

func NewMyService(svcMyService interfaces.MyService) (srv *httpMyService) {

	srv = &httpMyService{
		base: svcMyService,
		svc:  newServerMyService(svcMyService),
	}
	return
}

func (http *httpMyService) Service() MiddlewareSetMyService {
	return http.svc
}

func (http *httpMyService) WithLog() *httpMyService {
	http.svc.WithLog()
	return http
}

func (http *httpMyService) WithTrace() *httpMyService {
	http.svc.WithTrace()
	return http
}

func (http *httpMyService) WithMetrics() *httpMyService {
	http.svc.WithMetrics()
	return http
}

func (http *httpMyService) WithErrorHandler(handler ErrorHandler) *httpMyService {
	http.errorHandler = handler
	return http
}

func (http *httpMyService) SetRoutes(route *fiber.App) {
	route.Get("/v1/info/:id", http.serveInfo)
}
